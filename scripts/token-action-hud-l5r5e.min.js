const t={ID:"token-action-hud-l5r5e"},e={ID:"token-action-hud-core"},n="1.5",s={item:"tokenActionHud.template.item",utility:"tokenActionHud.utility"},a={armor:{id:"armor",name:"tokenActionHud.template.armor",type:"system"},equipment:{id:"equipment",name:"tokenActionHud.template.equipment",type:"system"},consumables:{id:"consumables",name:"tokenActionHud.template.consumables",type:"system"},containers:{id:"containers",name:"tokenActionHud.template.containers",type:"system"},treasure:{id:"treasure",name:"tokenActionHud.template.treasure",type:"system"},weapons:{id:"weapons",name:"tokenActionHud.template.weapons",type:"system"},combat:{id:"combat",name:"tokenActionHud.combat",type:"system"},token:{id:"token",name:"tokenActionHud.token",type:"system"},utility:{id:"utility",name:"tokenActionHud.utility",type:"system"}},i={armor:{groupId:"armor"},backpack:{groupId:"containers"},consumable:{groupId:"consumables"},equipment:{groupId:"equipment"},treasure:{groupId:"treasure"},weapon:{groupId:"weapons"}},o={razor_edged:"Razor-Edged",ceremonial:"Ceremonial",damaged:"Damaged",destroyed:"Destroyed",concealable:"Concealable",cumbersome:"Cumbersome",snaring:"Snaring",unholy:"Unholy",forbidden:"Forbidden",resplendent:"Resplendent",wargear:"Wargear",mundane:"Mundane",prepare:"Prepare",sacred:"Sacred",durable:"Durable",subtle:"Subtle",kenzo_blade:"Kenzō Blade"},r={jade_inlay:"Shirogane Jade Inlay",uchema:"Uchema’s Technique",yasunori:"Yasunori Steel",akodo:"Akodo Pattern",burning_water:"Burning Watter Pattern",concealment:"Concealment Pattern",deadly_fangs:"Deadly Fangs Pattern",fearsome_snarl:"Fearsome Snarl Pattern",ichiro:"Ichirō Pattern",mountain_silk:"Mountain Silk Pattern",screaming_fire:"Screaming Fire Pattern",toriyama:"Toriyama Endurance Pattern",qamarist:"Spirit of the Qamarist Pattern",yodhaniya:"Ghostlands Yodhaniya Pattern",kokejin:"Kökejin’s Heart of the Wind Pattern",agasha:"Agasha Pattern"};let l=null;Hooks.once("tokenActionHudCoreApiReady",(async e=>{l=class Utils{static getSetting(n,s=null){let a=s??null;try{a=game.settings.get(t.ID,n)}catch{e.api.Logger.debug(`Setting '${n}' not found`)}return a}static async setSetting(n,s){try{s=await game.settings.set(t.ID,n,s),e.api.Logger.debug(`Setting '${n}' set to '${s}'`)}catch{e.api.Logger.debug(`Setting '${n}' not found`)}}}}));let c=null;Hooks.once("tokenActionHudCoreApiReady",(async t=>{c=class ActionHandler extends t.api.ActionHandler{async buildSystemActions(e){if(this.actors=this.actor?[this.actor]:this.#t(),this.tokens=this.token?[this.token]:this.#e(),this.actorType=this.actor?.type,this.displayUnequipped=l.getSetting("displayUnequipped"),this.actor){let e=this.actor.items;e=t.api.Utils.sortItemsByName(e),this.items=e}"character"===this.actorType||"npc"===this.actorType?(this.inventorygroupIds=["equipped","consumables","containers","equipment","loot","tools","weapons","unequipped"],await this.#n()):this.actor||this.#s()}async#n(){await Promise.all([this.#a()])}#s(){}async#a(){if(0===this.items.size)return;const t=new Map;for(const[e,n]of this.items){const s=n.system.equipped,a=n.system?.quantity>0,i=this.#i(n),o=n.type;a&&(s&&(t.has("equipped")||t.set("equipped",new Map),t.get("equipped").set(e,n)),s||(t.has("unequipped")||t.set("unequipped",new Map),t.get("unequipped").set(e,n)),i&&("container"===o&&(t.has("containers")||t.set("containers",new Map),t.get("containers").set(e,n)),"equipment"===o&&(t.has("equipment")||t.set("equipment",new Map),t.get("equipment").set(e,n)),"loot"===o&&(t.has("loot")||t.set("loot",new Map),t.get("loot").set(e,n)),"tool"===o&&(t.has("tools")||t.set("tools",new Map),t.get("tools").set(e,n)),"weapon"===o&&(t.has("weapons")||t.set("weapons",new Map),t.get("weapons").set(e,n))))}const e={equipped:"Equipped",unequipped:"Unequipped",consumables:"Consumables",containers:"Containers",equipment:"Equipment",loot:"Loot",tools:"Tools",weapons:"Weapons"};for(const n of this.inventorygroupIds){if(!t.has(n))continue;const s={id:n,name:e[n],type:"system"},a=t.get(n);await this.#o(a,s),this.activationgroupIds}}#t(){const e=["character","npc"],n=t.api.Utils.getControlledTokens()?.filter((t=>t.actor)).map((t=>t.actor));return n.every((t=>e.includes(t.type)))?n:[]}#e(){const e=["character","npc"],n=t.api.Utils.getControlledTokens(),s=n?.filter((t=>t.actor)).map((t=>t.actor));return s.every((t=>e.includes(t.type)))?n:[]}#i(t){const e=t.type;if(this.showUnequippedItems&&!["consumable","spell","feat"].includes(e))return!0;return!(!t.system.equipped||"consumable"===e)}async#o(t,e,n="item"){if(0===t.size)return;if(!("string"==typeof e?e:e?.id))return;const s=await Promise.all([...t].map((async t=>await this.#r(n,t[1]))));this.addActions(s,e)}async#r(e,n){const a=n.id??n._id;let i=n?.name??n?.label;n?.system?.recharge&&!n?.system?.recharge?.charged&&n?.system?.recharge?.value&&(i+=" Recharge");const o=`${`${t.api.Utils.i18n(s[e])}: `??""}${i}`;let r="";if(Object.hasOwn(n,"disabled")){r=`toggle${n.disabled?"":" active"}`}const l=[e,a].join(this.delimiter),c=t.api.Utils.getImage(n),u=this.#l(n?.system?.activation?.type);let p=null;"spell"===n.type||(p=this.#c(n));const d=p?.info1,m=p?.info2,y=p?.info3,g=await this.#u(n);return{id:a,name:i,encodedValue:l,cssClass:r,img:c,icon1:u,icon2:null,info1:d,info2:m,info3:y,listName:o,tooltip:await this.#p(g)}}#l(t){}#c(t){return{info1:{text:this.#d(t)},info2:{text:this.#m(t)},info3:{text:this.#y(t)}}}#d(t){const e=t?.system?.quantity??0;return e>1?e:""}#m(t){const e=t?.system?.uses;return e&&(e.value>0||e.max>0)?`${e.value??"0"}${e.max>0?`/${e.max}`:""}`:""}#y(t){const e=t?.system?.consume?.target,n=t?.system?.consume?.type;if(e===t.id)return"";if("attribute"===n){if(!e)return"";const t=e.substr(0,e.lastIndexOf(".")),n=this.actor.system[t];return n?`${n.value??"0"}${n.max?`/${n.max}`:""}`:""}const s=this.items.get(e);if("charges"===n){const t=s?.system.uses;return t?.value?`${t.value}${t.max?`/${t.max}`:""}`:""}return s?.system?.quantity??""}async#u(t){if("none"===this.tooltipsSetting)return"";const e=t?.name??"";if("nameOnly"===this.tooltipsSetting)return e;const n="string"==typeof t?.system?.description?t?.system?.description:t?.system?.description?.value??"",s=t?.modifiers??null,a=[...t.system?.chatProperties??[],...t.system?.equippableItemCardProperties??[],...t.system?.activatedEffectCardProperties??[]].filter((t=>t));console.log(t);return{name:e,description:n,modifiers:s,properties:a,rarity:t?.system?.rarity??null,traits:"weapon"===t?.type?this.#g(t?.system?.properties):null}}#g(t){return t?Object.entries(t).map((([t,e])=>e.name)):null}async#p(e){if("none"===this.tooltipsSetting)return"";if("string"==typeof e)return e;const n=t.api.Utils.i18n(e.name);if("nameOnly"===this.tooltipsSetting)return n;const s=`<h3>${n}</h3>`,a=e?.descriptionLocalised??await TextEditor.enrichHTML(t.api.Utils.i18n(e?.description??""),{async:!0}),i=e?.rarity?`<span class="tah-tag legendary">${e.rarity}</span>`:"",o=e?.traits?`<div class="tah-properties">${e.traits.map((t=>`<span class="tah-property">${t}</span>`)).join("")}</div>`:"",r='<div class="tah-tags"><span class="tah-tag tah-tag-transparent">modifiersHtml</span></div>',l=[i,'<span class="tah-tag">traitsHtml</span>','<span class="tah-tag tah-tag-secondary">traits2Html</span>','<span class="tah-tag tah-tag-alt">traitsAltHtml</span>'].join(""),c=l?`<div class="tah-tags">${l}</div>`:"",u=`<div class="tah-tags-wrapper">${c}${r}</div>`;return console.log(o),`<div>${s}${u}${a}${o}</div>`}}}));let u=null;Hooks.once("tokenActionHudCoreApiReady",(async t=>{const e=a;Object.values(e).forEach((e=>{e.name=t.api.Utils.i18n(e.name),e.listName=`Group: ${t.api.Utils.i18n(e.listName??e.name)}`}));const n=Object.values(e);u={layout:[{nestId:"inventory",id:"inventory",name:t.api.Utils.i18n("Inventory"),groups:[{...e.weapons,nestId:"inventory_weapons"},{...e.armor,nestId:"inventory_armor"},{...e.equipment,nestId:"inventory_equipment"},{...e.consumables,nestId:"inventory_consumables"},{...e.containers,nestId:"inventory_containers"},{...e.treasure,nestId:"inventory_treasure"}]},{nestId:"utility",id:"utility",name:t.api.Utils.i18n("tokenActionHud.utility"),groups:[{...e.combat,nestId:"utility_combat"},{...e.token,nestId:"utility_token"},{...e.rests,nestId:"utility_rests"},{...e.utility,nestId:"utility_utility"}]}],groups:n}}));let p=null;function register(e){game.settings.register(t.ID,"displayUnequipped",{name:game.i18n.localize("tokenActionHud.template.settings.displayUnequipped.name"),hint:game.i18n.localize("tokenActionHud.template.settings.displayUnequipped.hint"),scope:"client",config:!0,type:Boolean,default:!0,onChange:t=>{e(t)}})}Hooks.once("tokenActionHudCoreApiReady",(async t=>{p=class RollHandler extends t.api.RollHandler{async handleActionClick(t,e){const[n,s]=e.split("|");console.log(n),console.log(this.isRenderItem()),console.log(this.actor);if(["item"].includes(n)&&this.isRenderItem())return this.doRenderItem(this.actor,s);const a=["character"];if(this.actor)return void await this.#h(t,this.actor,this.token,n,s);const i=canvas.tokens.controlled.filter((t=>a.includes(t.actor?.type)));for(const e of i){const a=e.actor;await this.#h(t,a,e,n,s)}}async handleActionHover(t,e){}async handleGroupClick(t,e){}async#h(t,e,n,s,a){switch(s){case"item":this.#f(t,e,a);break;case"utility":this.#k(n,a)}}#f(t,e,n){e.items.get(n).toChat(t)}async#k(t,e){if("endTurn"===e)game.combat?.current?.tokenId===t.id&&await(game.combat?.nextTurn())}}}));let d=null;Hooks.once("tokenActionHudCoreApiReady",(async e=>{d=class SystemManager extends e.api.SystemManager{getActionHandler(){return new c}getAvailableRollHandlers(){return{core:"Core Template"}}getRollHandler(t){let e;return e=new p,e}async registerDefaults(){return u}registerSettings(t){register(t)}registerStyles(){return{template:{class:"tah-style-l5r5e-style",file:"tah-l5r5e-style",moduleId:t.ID,name:"Template Style"}}}}})),Hooks.on("tokenActionHudCoreApiReady",(async()=>{const e=game.modules.get(t.ID);e.api={requiredCoreModuleVersion:"1.5",SystemManager:d},Hooks.call("tokenActionHudSystemReady",e)}));export{s as ACTION_TYPE,c as ActionHandler,e as CORE_MODULE,u as DEFAULTS,a as GROUP,r as ITEM_PATTERN,o as ITEM_QUALITIES,i as ITEM_TYPE,t as MODULE,n as REQUIRED_CORE_MODULE_VERSION,p as RollHandler,d as SystemManager,l as Utils,register};
