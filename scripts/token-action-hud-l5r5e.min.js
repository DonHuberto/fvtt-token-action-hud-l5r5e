const e={ID:"token-action-hud-l5r5e"},t={ID:"token-action-hud-core"},i="2.0.12",s={item:"tokenActionHud.template.item",utility:"tokenActionHud.utility"},n={armor:{id:"armor",name:"l5r5e.armors.title",type:"system"},equipment:{id:"equipment",name:"l5r5e.items.title",type:"system"},equipped:{id:"equipped",name:"Equipped",type:"system"},unequipped:{id:"unequipped",name:"Unequipped",type:"system"},weapons:{id:"weapons",name:"l5r5e.weapons.title",type:"system"},combat:{id:"combat",name:"tokenActionHud.combat",type:"system"},token:{id:"token",name:"tokenActionHud.token",type:"system"},utility:{id:"utility",name:"tokenActionHud.utility",type:"system"},rings:{id:"rings",name:"l5r5e.rings.title",type:"system"},derived:{id:"derived",name:"l5r5e.attributes.title",type:"system"},standing:{id:"standing",name:"l5r5e.social.title",type:"system"},artisan:{id:"artisan",name:"l5r5e.skills.artisan.title",type:"system"},martial:{id:"martial",name:"l5r5e.skills.martial.title",type:"system"},scholar:{id:"scholar",name:"l5r5e.skills.scholar.title",type:"system"},social:{id:"social",name:"l5r5e.skills.social.title",type:"system"},trade:{id:"trade",name:"l5r5e.skills.trade.title",type:"system"},kata:{id:"kata",name:"l5r5e.techniques.kata",type:"system"},kiho:{id:"kiho",name:"l5r5e.techniques.kiho",type:"system"},inversion:{id:"inversion",name:"l5r5e.techniques.inversion",type:"system"},invocation:{id:"invocation",name:"l5r5e.techniques.invocation",type:"system"},ritual:{id:"ritual",name:"l5r5e.techniques.ritual",type:"system"},shuji:{id:"shuji",name:"l5r5e.techniques.shuji",type:"system"},maho:{id:"maho",name:"l5r5e.techniques.maho",type:"system"},ninjutsu:{id:"ninjutsu",name:"l5r5e.techniques.ninjutsu",type:"system"},mantra:{id:"mantra",name:"l5r5e.techniques.mantra",type:"system"},school_ability:{id:"school-ability",name:"l5r5e.techniques.school_ability",type:"system"},mastery_ability:{id:"mastery-ability",name:"l5r5e.techniques.mastery_ability",type:"system"},title_ability:{id:"title-ability",name:"l5r5e.techniques.title_ability",type:"system"}},a={armor:{groupId:"armor"},equipment:{groupId:"equipment"},weapon:{groupId:"weapons"}},r={artisan:{groupId:"artisan"},martial:{groupId:"martial"},scholar:{groupId:"scholar"},social:{groupId:"social"},trade:{groupId:"trade"}},o={razor_edged:"Razor-Edged",ceremonial:"Ceremonial",damaged:"Damaged",destroyed:"Destroyed",concealable:"Concealable",cumbersome:"Cumbersome",snaring:"Snaring",unholy:"Unholy",forbidden:"Forbidden",resplendent:"Resplendent",wargear:"Wargear",mundane:"Mundane",prepare:"Prepare",sacred:"Sacred",durable:"Durable",subtle:"Subtle",kenzo_blade:"Kenzō Blade"},l={jade_inlay:"Shirogane Jade Inlay",uchema:"Uchema’s Technique",yasunori:"Yasunori Steel",akodo:"Akodo Pattern",burning_water:"Burning Watter Pattern",concealment:"Concealment Pattern",deadly_fangs:"Deadly Fangs Pattern",fearsome_snarl:"Fearsome Snarl Pattern",ichiro:"Ichirō Pattern",mountain_silk:"Mountain Silk Pattern",screaming_fire:"Screaming Fire Pattern",toriyama:"Toriyama Endurance Pattern",qamarist:"Spirit of the Qamarist Pattern",yodhaniya:"Ghostlands Yodhaniya Pattern",kokejin:"Kökejin’s Heart of the Wind Pattern",agasha:"Agasha Pattern"};function getCoreModule(){const e=game.modules.get(t.ID);if(!e)throw new Error("Token Action HUD Core module is not available. Please ensure it is installed and active.");return e}function getCoreApi(){const e=getCoreModule();if(!e.api)throw new Error("Token Action HUD Core API is not available. Ensure you are using Token Action HUD Core 2.x or later.");return e.api}let c=null;Hooks.once("tokenActionHudCoreApiReady",(async e=>{const t=n;Object.values(t).forEach((t=>{t.name=e.api.Utils.i18n(t.name),t.listName=`Group: ${e.api.Utils.i18n(t.listName??t.name)}`}));const i=Object.values(t);c={layout:[{nestId:"inventory",id:"inventory",name:e.api.Utils.i18n("l5r5e.sheets.inventory"),groups:[{...t.weapons,nestId:"inventory_weapons"},{...t.armor,nestId:"inventory_armor"},{...t.equipment,nestId:"inventory_items"}]},{nestId:"attributes",id:"attributes",name:e.api.Utils.i18n("l5r5e.attributes.title"),groups:[{...t.rings,nestId:"attributes_rings"},{...t.derived,nestId:"attributes_derived"},{...t.standing,nestId:"attributes_standing"}]},{nestId:"skills",id:"skills",name:e.api.Utils.i18n("l5r5e.skills.title"),groups:[{...t.artisan,nestId:"skills_artisan"},{...t.martial,nestId:"skills_martial"},{...t.scholar,nestId:"skills_scholar"},{...t.social,nestId:"skills_social"},{...t.trade,nestId:"skills_trade"}]},{nestId:"techniques",id:"techniques",name:e.api.Utils.i18n("l5r5e.techniques.title"),groups:[{...t.school_ability,nestId:"techniques_school"},{...t.mastery,nestId:"techniques_mastery"},{...t.kata,nestId:"techniques_kata"},{...t.kiho,nestId:"techniques_kiho"},{...t.inversion,nestId:"techniques_inversion"},{...t.invocation,nestId:"techniques_invocation"},{...t.ritual,nestId:"techniques_ritual"},{...t.shuji,nestId:"techniques_shuji"},{...t.maho,nestId:"techniques_maho"},{...t.ninjutsu,nestId:"techniques_ninjutsu"},{...t.mantra,nestId:"techniques_mantra"},{...t.titleAbility,nestId:"techniques_title"}]},{nestId:"utility",id:"utility",name:e.api.Utils.i18n("tokenActionHud.utility"),groups:[{...t.combat,nestId:"utility_combat"},{...t.token,nestId:"utility_token"},{...t.rests,nestId:"utility_rests"},{...t.utility,nestId:"utility_utility"}]}],groups:i}}));let d=null;Hooks.once("tokenActionHudCoreApiReady",(async t=>{d=class Utils{static getSetting(i,s=null){let n=s??null;try{n=game.settings.get(e.ID,i)}catch{t.api.Logger.debug(`Setting '${i}' not found`)}return n}static async setSetting(i,s){try{s=await game.settings.set(e.ID,i,s),t.api.Logger.debug(`Setting '${i}' set to '${s}'`)}catch{t.api.Logger.debug(`Setting '${i}' not found`)}}}}));const u=getCoreApi();class ActionHandler extends u.ActionHandler{async buildSystemActions(e){if(this.actors=this.actor?[this.actor]:this.#e(),this.tokens=this.token?[this.token]:this.#t(),this.actorType=this.actor?.type,this.displayUnequipped=d.getSetting("displayUnequipped"),this.actor){let e=this.actor.items;e=u.Utils.sortItemsByName(e),this.items=e}"character"===this.actorType||"npc"===this.actorType?(this.inventorygroupIds=["armor","equipment","weapons"],this.techniqueGroupIds=["kata","kiho","inversion","invocation","ritual","shuji","maho","ninjutsu","mantra","school-ability","mastery-ability","title-ability"],await this.#i()):this.actor||this.#s()}async#i(){await Promise.all([this.#n(),this.#a()]),this.#r(),this.#o()}#s(){}async#n(){if(0===this.items.size)return;const e=new Map;for(const[t,i]of this.items){const s=i.system.equipped,n=i.system?.quantity>0,a=this.#l(i),r=i.type;n&&(s&&(e.has("equipped")||e.set("equipped",new Map),e.get("equipped").set(t,i)),s||(e.has("unequipped")||e.set("unequipped",new Map),e.get("unequipped").set(t,i)),a&&("item"===r&&(e.has("equipment")||e.set("equipment",new Map),e.get("equipment").set(t,i)),"weapon"===r&&(e.has("weapons")||e.set("weapons",new Map),e.get("weapons").set(t,i)),"armor"===r&&(e.has("armor")||e.set("armor",new Map),e.get("armor").set(t,i))))}const t={equipment:u.Utils.i18n("l5r5e.items.title"),armor:u.Utils.i18n("l5r5e.armors.title"),weapons:u.Utils.i18n("l5r5e.weapons.title")};for(const i of this.inventorygroupIds){if(!e.has(i))continue;const s={id:i,name:t[i],type:"system"},n=e.get(i);await this.#c(n,s,i)}}#r(){const e="ring",t=game.l5r5e.HelpersL5r5e.getRingsList(this.actor);if(0===t.length)return;const i=this.actor.system.stance,s={id:"rings",name:`${u.Utils.i18n("l5r5e.rings.title")}`??"rings",type:"system"},n=Object.values(t).map((t=>{try{const s=t.id,n=[e,s].join(this.delimiter),a=`${u.Utils.i18n(`l5r5e.rings.${s}`)}: ${t.value}`??"",r=`${`${t.label}:`??""}${a}`,o=u.Utils.getImage(`systems/l5r5e/assets/icons/rings/${s}.svg`),l=`${u.Utils.i18n(`l5r5e.conflict.stances.${s}tip`)}`;let c="";return s===i&&(c="toggle active"),{id:s,name:a,img:o,encodedValue:n,cssClass:c,tooltip:l,listName:r}}catch(e){return u.Logger.error(t),null}})).filter((e=>!!e));this.addActions(n,s)}#o(){if("character"!==this.actorType)return;const e="skill",t=game.l5r5e.HelpersL5r5e.getCategoriesSkillsList();for(const[i,s]of t)try{const t={id:i,name:`${u.Utils.i18n(`l5r5e.skills.${i}.title`)}`??i,type:"system"},n=Object.entries(s).map((t=>{const s=t[1],n=[e,s].join(this.delimiter),a=this.actor.system.skills[i][s],r=`${u.Utils.i18n(`l5r5e.skills.${i}.${s}`)}: ${a}`??"";return{id:s,name:r,encodedValue:n,listName:`${`${u.Utils.i18n("l5r5e.skills.label")}: `??""}${r}`}}));this.addActions(n,t)}catch(e){return u.Logger.error(i),null}}async#a(e){if(0===this.items.size)return;const t=new Map;for(const[e,i]of this.items){if(this.#d(i)){const s=String(i.system.technique_type).replace("_","-");t.has(s)||t.set(s,new Map),t.get(s).set(e,i)}}for(const e of this.techniqueGroupIds){if(!t.has(e))continue;const i={id:e,type:"system"},s=t.get(e);await this.#c(s,i,"technique")}}#e(){const e=["character","npc"],t=u.Utils.getControlledTokens()?.filter((e=>e.actor)).map((e=>e.actor));return t.every((t=>e.includes(t.type)))?t:[]}#t(){const e=["character","npc"],t=u.Utils.getControlledTokens(),i=t?.filter((e=>e.actor)).map((e=>e.actor));return i.every((t=>e.includes(t.type)))?t:[]}#l(e){const t=e.type;if(this.showUnequippedItems&&!["item","technique","peculiarity"].includes(t))return!0;return!!e.system.equipped}#d(e){if("technique"!==e.type)return!1;return!!["kata","kiho","inversion","invocation","ritual","shuji","maho","ninjutsu","mantra","school_ability","mastery_ability","title_ability"].includes(e.system.technique_type)}async#c(e,t,i="item"){if(0===e.size)return;if(!("string"==typeof t?t:t?.id))return;const s=await Promise.all([...e].map((async e=>await this.#u(i,e[1]))));this.addActions(s,t)}async#u(e,t){const i=t.id??t._id;let n=t?.name??t?.label;const a=`${`${u.Utils.i18n(s[e])}: `??""}${n}`;let r="";if(Object.hasOwn(t.system,"readied")){r=`toggle${t.system.readied?" active":""}`}const o=[e,i].join(this.delimiter),l=u.Utils.getImage(t),c=this.#m(t?.system?.activation?.type);let d=this.#p(t);const m=d?.info1,p=d?.info2,y=d?.info3,h=await this.#y(t);return{id:i,name:n,encodedValue:o,cssClass:r,img:l,icon1:c,icon2:null,info1:m,info2:p,info3:y,listName:a,tooltip:await this.#h(h)}}#m(e){}#p(e){return{info1:{text:this.#g(e)},info2:{text:this.#k(e)},info3:{text:this.#f(e)}}}#g(e){const t=e?.system?.quantity??0;return t>1?t:""}#k(e){const t=e?.system?.uses;return t&&(t.value>0||t.max>0)?`${t.value??"0"}${t.max>0?`/${t.max}`:""}`:""}#f(e){const t=e?.system?.consume?.target,i=e?.system?.consume?.type;if(t===e.id)return"";if("attribute"===i){if(!t)return"";const e=t.substr(0,t.lastIndexOf(".")),i=this.actor.system[e];return i?`${i.value??"0"}${i.max?`/${i.max}`:""}`:""}const s=this.items.get(t);if("charges"===i){const e=s?.system.uses;return e?.value?`${e.value}${e.max?`/${e.max}`:""}`:""}return s?.system?.quantity??""}async#y(e){if("none"===this.tooltipsSetting)return"";const t=e?.name??"";if("nameOnly"===this.tooltipsSetting)return t;const i="string"==typeof e?.system?.description?e?.system?.description:e?.system?.description?.value??"",s=e?.modifiers??null,n=[...e.system?.chatProperties??[],...e.system?.equippableItemCardProperties??[],...e.system?.activatedEffectCardProperties??[]].filter((e=>e)),a=e?.type;return{name:t,type:a,description:i,modifiers:s,properties:n,rarity:e?.system?.rarity??null,traits:this.#I(e?.system?.properties),range:"weapon"===e?.type?e?.system?.range:null,damage:"weapon"===e?.type?e?.system?.damage:null,deadliness:"weapon"===e?.type?e?.system?.deadliness:null,grip1:"weapon"===e?.type?e?.system?.grip_1:null,grip2:"weapon"===e?.type?e?.system?.grip_2:null,physical:"armor"===e?.type?e?.system?.armor?.physical:null,supernatural:"armor"===e?.type?e?.system?.armor?.supernatural:null}}#I(e){return e?Object.entries(e).map((([e,t])=>t.name)):null}async#h(e){if("none"===this.tooltipsSetting)return"";if("string"==typeof e)return e;const t=u.Utils.i18n(e.name);if("nameOnly"===this.tooltipsSetting)return t;const i=`<h3>${t}</h3>`,s=e?.descriptionLocalised??await TextEditor.enrichHTML(u.Utils.i18n(e?.description??""),{async:!0}),n=e?.rarity?`<div class="tah-tags-wrapper"><span class="tah-tag ${this.#q(e.rarity)}">Rarity: ${e.rarity}</span></div>`:"",a=e?.traits?`<div class="tah-properties">${e.traits.map((e=>`<span class="tah-property">${e}</span>`)).join("")}</div>`:"",r=[n,"weapon"===e.type?this.#b(e):"","weapon"===e.type?this.#A(e):"","armor"===e.type?this.#v(e):""].join(""),o=r?`<div class="tah-tags">${r}</div>`:"";return s||o?`<div>${i}${o?`<div class="tah-tags-wrapper">${o}</div>`:""}${s}${a}</div>`:t}#q(e){return e?e<3?"common":e<5?"uncommon":e<7?"rare":e<9?"veryRare":9==e?"legendary":10==e?"artifact":void 0:""}#b(e){return[`<span class="tah-tag">${u.Utils.i18n("l5r5e.weapons.range")}: ${e.range}</span>`,`<span class="tah-tag">${u.Utils.i18n("l5r5e.weapons.damage")}: ${e.damage}</span>`,`<span class="tah-tag">${u.Utils.i18n("l5r5e.weapons.deadliness")}: ${e.deadliness}</span>`].join("")}#A(e){return[e.grip1&&"N/A"!==e.grip1?`<span class="tah-tag">${u.Utils.i18n("l5r5e.weapons.1hand")}: ${e.grip1}</span>`:"",e.grip2&&"N/A"!==e.grip2?`<span class="tah-tag">${u.Utils.i18n("l5r5e.weapons.2hand")}: ${e.grip2}</span>`:""].join("")}#v(e){return[e?.physical&&e?.physical>0?`<span class="tah-tag">${u.Utils.i18n("l5r5e.armors.physical")}: ${e?.physical}</span>`:"",e?.supernatural&&e?.supernatural>0?`<span class="tah-tag">${u.Utils.i18n("l5r5e.armors.supernatural")}: ${e?.supernatural}</span>`:""].join("")}}const m=getCoreApi();class RollHandler extends m.RollHandler{async handleActionClick(e,t){const[i,s]=t.split("|");if(["item","weapons","technique","armor"].includes(i)&&this.isRenderItem())return this.doRenderItem(this.actor,s);if(["ring"].includes(i)&&this.isRenderItem()&&"ring"===i)return void await this.#w(e,this.actor,s);const n=["character"];if(this.actor)return void await this.#$(e,this.actor,this.token,i,s);const a=canvas.tokens.controlled.filter((e=>n.includes(e.actor?.type)));for(const t of a){const n=t.actor;await this.#$(e,n,t,i,s)}}async handleActionHover(e,t){}async handleGroupClick(e,t){}async#$(e,t,i,s,n){switch(s){case"weapons":this.#U(e,t,n);break;case"ring":this.#_(e,t,n);break;case"skill":this.#S(e,t,n);break;case"technique":this.#C(e,t,n);break;case"armor":case"equipment":await this.#H(e,t,n);break;case"utility":this.#T(i,n)}}async#H(e,t,i){const s=t.items.get(i);await game.l5r5e.HelpersL5r5e.sendToChat(s)}async#w(e,t,i){}#U(e,t,i){const s=t.items.get(i);new game.l5r5e.DicePickerDialog({skillId:s.system.skill}).render(!0)}#_(e,t,i){new game.l5r5e.DicePickerDialog({ringId:i}).render(!0)}#S(e,t,i){new game.l5r5e.DicePickerDialog({skillId:i}).render(!0)}#C(e,t,i){const s=t.items.get(i);s&&"technique"===s.type&&s.system.skill&&new game.l5r5e.DicePickerDialog({skillsList:s.system.skill,ringId:s.system.ring,difficulty:s.system.difficulty}).render(!0)}async#T(e,t){if("endTurn"===t)game.combat?.current?.tokenId===e.id&&await(game.combat?.nextTurn())}}function register(t){game.settings.register(e.ID,"displayUnequipped",{name:game.i18n.localize("tokenActionHud.l5r5e.settings.displayUnequipped.name"),hint:game.i18n.localize("tokenActionHud.l5r5e.settings.displayUnequipped.hint"),scope:"client",config:!0,type:Boolean,default:!0,onChange:e=>{t(e)}})}const p=getCoreApi();class SystemManager extends p.SystemManager{getActionHandler(){return new ActionHandler}getAvailableRollHandlers(){return{core:"Core Template"}}getRollHandler(e){let t;return t=new RollHandler,t}async registerDefaults(){return c}registerSettings(e){register(e)}}Hooks.once("init",(()=>{try{const t=getCoreApi();if("function"!=typeof t.registerSystem)return void console.error("Token Action HUD Core API does not provide registerSystem. Please update Token Action HUD Core to version 2.x.");t.registerSystem({moduleId:e.ID,requiredCoreModuleVersion:"2.0.12",SystemManager:SystemManager})}catch(e){console.error("Failed to register Token Action HUD L5R5E system with Token Action HUD Core.",e)}}));export{s as ACTION_TYPE,ActionHandler,t as CORE_MODULE,c as DEFAULTS,n as GROUP,l as ITEM_PATTERN,o as ITEM_QUALITIES,a as ITEM_TYPE,e as MODULE,i as REQUIRED_CORE_MODULE_VERSION,RollHandler,r as SKILL_TYPE,SystemManager,d as Utils,getCoreApi,getCoreModule,register};
